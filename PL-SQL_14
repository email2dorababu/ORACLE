
VARRAY Composite data type.

Lot of cases we need to store a collection of elements, of same data type.
in other pgm languages it is called array.
in pl/sql it is callled variable array,VARRAY.

DECLAREW
TYPE ABC is VARRAY(10) of NUMBER;
v2 ABC;
Begin
  v2(1):=78
  END
  
  First we have declare a VARRAY TYPE of a datatype.
  here in the dclaration, we have to give maximum size.
  
  in the above pgm, it will give error, becase at declaration varray is null.
  so v2(1) throws exception. We must initialize  it first, (like a constructor.)
  
Begin
v2:=ABC(); this is constructor. the v2 variable is initialized using the system defined constructor, which is the type constructor.
v2.extend(); this we have to extend, i.e allocate a place where we can put values.
v2(1):=78.
If we wnat to allocate another element then we have to extend it again.
v2.extend();
v2(2):=10.
we can go till v2(10) because max size is 10.

aNother  example:
DECLARE
TYPE ABC is varray(10) of number;
v1 ABC:=ABC(1,2,3,4,5,6);
Begin
dbms_ouput.put_line(v1(1)); value here is 1.
end;

another example;

Declare
type abc is varray(10) of number;
v2 abc;
cursor c1 is select empno from emp where rownum<10;
v_emp abc;
counter NUMBER:=1;
Begin
  v2:=abc();
  FOR i in 1..10
  Loop 
  v2.extend();
  v2(i) :=i;
  END Loop;
  v_emp:=abc();
  for rec in c1 loop 
    v_emp.extend();
      v_emp(counter):=rec.empno;
      counter:=counter+1;
      end loop;
      end;

-------------------
We have predefined built in functions to manipulate COllections like varray etc..
Built in functions/procedures.
ex: v2 have 1,2,3
This is called collection methods.These are used to manipulate collections.
1.Count/limit  -- v2.count gives me size/no of eleentes in the varray and limit gives the max size of varray.
2.exists(n) - v2.exists(1) if the first element exits or not?
3.First/Last first gives index of first element of varray.v2,last will give me the last element which have value.
4.Prior/Next. -> v2.prior(2) gives 1. inside brackets is index. v2.next(1) gives 2.
5. Extend/Trim , by extend we extend the varray.we create a space so that u can allocate a value there.
v2.trim(1) removes space at the end, now v2.count gives 2.

Declare 
type ABC is varray(10) of number;
v1 ABC :=ABC(1,2,3,4,5,6);
Begin
DOPL v1.count v1.limit v1lfirst v1.last
v1.trim(2) removed 2 elements at the end
for i in v1.first .. v1.last loop
  dopl(v1(i));
  end loop;
  dopl(v1.last);
  END;
v

